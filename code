#include<iostream>
#include<vector>
#include<string>
#include<Windows.h>

bool zxc = false;

int menu() {//Меню в виде цикла

    int a;

        std::cout << "---------------------------------------------------------------------------------------------------------" << std::endl;
        std::cout << "|\t\t\t\t\tДобро пожаловать в игру 'Поле чудес!'\t\t\t\t|" << std::endl;
        std::cout << "|\t\t\t\t\t\t1.Начать играть\t\t\t\t\t\t|" << std::endl;
        std::cout << "|\t\t\t\t\t\t2.Об игре (правила)\t\t\t\t\t|" << std::endl;
        std::cout << "|\t\t\t\t\t\t3.Выход\t\t\t\t\t\t\t|" << std::endl;
        std::cout << "---------------------------------------------------------------------------------------------------------" << std::endl;

        std::cin >> a;
        if (a != 1 && a != 2 && a != 3)
        {
            if (!std::cin)
            {
                std::cout << "Нужны не буквы, а цифры!! Пока" << std::endl;
                exit(0);
            }
            std::cout << "Что ты вводишь? Выбери один из 3 вариантов" << std::endl;
            return 2;
        }
        else
        {
            switch (a)
            {
            case 1:
            {
                system("cls");
                return 1;
            }

            case 2:
            {
                std::cout << "Капитал-шоу “Поле чудес” – советская и российская телеигра, российский аналог американской телевизионной программы “Колесо Фортуны”. Художественный руководитель и ведущий программы – Леонид Якубович. Производитель — Телекомпания “ВИD”. Загадывается слово,твоя задача угадать его последовательно по буквам. У тебя будет описание слова и пара бонусов. На всю игру дается 10 попыток" << std::endl;
                return 2;
            }
            case 3:
            {
                std::cout << "До встречи!!!" << std::endl;
                zxc = !zxc;
                return 3;
            }
            }

        }
}

int kategorii() 
{
    int k;

    std::cout << "---------------------------------------------------------------------------------------------------------" << std::endl;
    std::cout << "|\t\t\t\t\tВыбери категорию:\t\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t1.Животные\t\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t2.Страны\t\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t3.Объекты\t\t\t\t\t\t|" << std::endl;
    std::cout << "---------------------------------------------------------------------------------------------------------" << std::endl;

    std::cin >> k;
    if (k != 1 && k != 2 && k != 3)
    {
        if (!std::cin)
        {
            std::cout << "Нужны не буквы, а цифры!! Пока" << std::endl;
            exit(0);
        }
        std::cout << "Что ты вводишь? Выбери один из 3 вариантов" << std::endl;
        exit(0);
    }
    else
    {
        switch (k)
        {
        case 1:
        {
            system("cls");
            return 1;
        }
        case 2:
        {
            system("cls");
            return 2;
        }
        case 3:
        {
            system("cls");
            return 3;
        }
        }
    }
}

std::string stranimal(int random) {

    std::string text[] = {"Какое существо может задержать дыхание на 6 суток? (не рыба)",
                          "Какое живое существо может спать, не просыпаясь 3 года?",
                          "У какого живого существа кровь синего цвета?",
                          "Какое животное может переварить стальной гвоздь?",
                          "Какое животное одновременно дает молоко и откладывает яйца?",
                          "Какая самая крупная птица на Земле?" };
    std::cout << text[random] << std::endl;

    std::string word[] = { "скорпион", "улитка", "осьминог", "крокодил", "утконос", "страус" };
    return word[random];
}

std::string strcountry(int random) {

    std::string text[] = { "Какая страна не имеет столицы?",
                          "Какая страна мира имеет две столицы?",
                          "В какой стране живут белые слоны?",
                          "В какой стране мира наибольшее число людей, пользующихся мобильными телефонами?",
                          "В какой стране мира больше всего вегетарианцев?",
                          "По одной из версий, название этой страны с одного из древних языков можно перевести как берег кроликов" };
    std::cout << text[random] << std::endl;

    std::string word[] = { "науру", "боливия", "таиланд", "китай", "индия", "испания" };
    return word[random];
}

std::string strobject(int random) {

    std::string text[] = { "В 1931 году Аркадий Райкин сам придумал и произнес со сцены некое слово. Оно стремительно вошло в обиход — так стали называть несуразную легкую сумку.",
                          "Если скорость ветра тропического шторма превышает 60 км/ч, ему присваивают личное имя. Во времена Второй мировой войны американские синоптики начали давать ураганам имена кого?",
                          "Английский писатель Киплинг говорил: «Женская интуиция намного точнее, чем мужская…»",
                          "Какого слова нет в языке народов Арктики?",
                          "Исследователями Гарвардского университета было установлено, что употребление мороженого в больших количествах уменьшает риск этого",
                          "Цитрусовое дерево с ароматными цветками" };
    std::cout << text[random] << std::endl;

    std::string word[] = { "авоська", "теща", "уверенность", "война", "бесплодие", "бергамот" };
    return word[random];
}

int illustrationwrong(int hits) {//Визуализация при ошибках
    int yacub = rand() % 6 + 1;
    switch (yacub) {
    case 1: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                  Увы и ах!    *\n"
            "*           (-m-)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*     Такой буквы здесь нет!    *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 2: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*             Что вы говорите!  *\n"
            "*           (~_~)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*       Вот! Такой буквы нет!   *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 3: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 Да ладно?!    *\n"
            "*           (;-Д-)              *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*          О! Нет её!           *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 4: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 Посмотрим...  *\n"
            "*           (>_<)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*         Неправильно!          *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 5: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*               Мама мия...     *\n"
            "*           (T=T)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*         А буквы-то нет!       *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 6:
    {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*             Что там у нас...  *\n"
            "*           (0_0)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*         Такой буквы в         *\n"
            "*          слове нет!           *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    }
    return hits;
}

void illustrationright() {
    int yacub = rand() % 6 + 1;
    switch (yacub) {
    case 1: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                Так так...     *\n"
            "*           ('-'*)              *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*        Откройте букву!        *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 2: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*             Что вы говорите!  *\n"
            "*           (^_^)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*      Вот! Такая буква есть!   *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 3: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 Да ладно?!    *\n"
            "*           (О_о)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*          Правильно!           *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 4: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 Посмотрим...  *\n"
            "*           (>о<)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*       Есть такая буква!       *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 5: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 И это...      *\n"
            "*           (uwu)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*       Правильная буква!       *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 6:
    {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*             Что там у нас...  *\n"
            "*           (6_6)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*        Может скажете          *\n"
            "*        полное слово?          *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }
    }
}

int letterFill(char guess, std::string secretword, std::string& guessword)
{
    int i;
    int matches = 0;
    int len = secretword.length();
    for (i = 0; i < len; i++)
    {
        if (guess == guessword[i])
            return 0;
        if (guess == secretword[i])
        {
            guessword[i] = guess;
            matches++;
        }
    }
    return matches;
}

void gameplace(int random, int k) {//Основная функция игры
    std::string striing;
    char letter;
    std::string used;
    int durachok = 0;
    int wrong_guess = 0;

    if (k == 1) {
        striing = stranimal(random);//Передали в нашу строку выбранную строку,путем генерации
    }
    else if (k == 2) 
    {
        striing = strcountry(random);
    }
    else
    {
        striing = strobject(random);
    }

    std::string unknown(striing.length(), '*');

    while (wrong_guess < 10)//Цикл в котором будут процессы до того пока количество ошибок < 10

    {
        std::cout << "\n\n" << unknown << std::endl;

        std::cin >> letter;
        std::cout << " " << std::endl;
        for (int i = 0; i < used.length(); i++)
        {
            if (letter == used[i]) {
                std::cout << "Вы уже вводили такую букву, попробуйте другую" << std::endl;
                durachok++;
            }
        }
        if (durachok == 0) {
            used.push_back(letter);
            used.push_back(' ');
            std::cout << "Использованные буквы: [" << used << "]" << std::endl;

            if (letterFill(letter, striing, unknown) == 0)
            {
                illustrationwrong(wrong_guess++);
            }
            else
            {
                illustrationright();
            }

            std::cout << "У вас осталось " << 10 - wrong_guess << " попыток" << std::endl;
            std::cout << " " << std::endl;

            if (striing == unknown)
            {
                std::cout << striing << std::endl;
                std::cout << "*********************************\n"
                    "*                               *\n"
                    "*                               *\n"
                    "*                               *\n"
                    "*             И вы выиграли...  *\n"
                    "*           ($_$)               *\n"
                    "*           / | \\               *\n"
                    "*             |                 *\n"
                    "*            / |                *\n"
                    "*                               *\n"
                    "*        Автомобиль!!!          *\n"
                    "*         Поздравляю!           *\n"
                    "*********************************\n"
                    "*                               *\n";
                break;
            }
        }
        durachok = 0;
    }
    if (wrong_guess == 10)
    {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*              Вы проиграли...  *\n"
            "*           (Т_Т)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*  но в скрижалях «Поля Чудес»  *\n"
            "*    вы навсегда остаетесь      *\n"
            "*        победителем!           *\n"
            "*********************************\n"
            "*                               *\n";
        std::cout << "Было загадано слово : " << striing << std::endl;
    }

    std::cin.ignore();
    std::cin.get();
}

int main()
{
    srand(time(NULL));
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);

    do {
        if (menu() == 1) {//Цикл где идет проверка если пользователь ввел 1 то генерируем число во все функции и запускаем игровой цикл
            int k = kategorii();
            int random = 1 + rand() % 6;
            gameplace(random, k);
        }
    } while (zxc == false);
}   
